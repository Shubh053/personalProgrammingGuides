CONVENTIONS USED
1) *:user input data


SOME COMMON DEFINATIONS
1) Migration: A migration allows you to move databases from one design to another, this is also reversible. So you can 'migrate' your databases.

2) Include function: The include() function allows us to look for a match with regular expressions and link back to our application's own urls.py file.



DJANGO VIRTUAL ENVIRONMENT SETUP
1) Create env: conda create --name *myDjangoEnv django
2) Checking env installed: conda info --envs
3) Activating env: source activate *myDjangoEnv
4) Deactivating env: source deactivate



CREATING FIRST PROJECT
1) create using django-admin command line tool: django-admin startproject *first_project



FILES EXPLANATIONS
1) __init__.py: This is a blank python script that due to it's special name let's python know that this directory can be treated as a package.

2) settings.py: This is where you will store all your project settings.

3) urls.py: This is a python script that will store all the URL patterns for your project. Basically the different pages of your web application.

4) wsgi.py: This is a python script that acts as the Web Server Gateway Interface. it will later on help us deploy our web app to production.

5) manage.py: This is a project script that we will use a lot. It will be associates with many commands as we build our web app!

6) admin.py: You can register your models here which django will then use them with Django's admin interface.

7) apps.py: Here you can place application specific configurations.

8) models.py: Here you store the application's data models.

9) tests.py: Here you can store test functions to test your code.

10) views.py: This is where you have functions that handle requests and return responses.

11) migrations folder: This directory stores database specific information as it relates to the models.



MANAGE.PY COMMANDS
1) Start server: python manage.py runserver
2) Create a application: python manage.py startapp *first_app
3) migrating the database: python manage.py migrate
4) register the changes to your app: python manage.py makemigrations *app1
5) migrate one more time: python manage.py migrate
6) create a superuser: python manage.py createsuperuser



MTV PARADIGM
1) In the views.py file we import any models that we will need to use.
2) Use the view to query the model for data that we will need.
3) Pass results from the model to the template.
4) Edit the template so that it is ready to accept and display the data from the model.
5) Map a URL to the view.
